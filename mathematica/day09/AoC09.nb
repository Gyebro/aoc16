(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     34408,        792]
NotebookOptionsPosition[     32208,        711]
NotebookOutlinePosition[     32581,        727]
CellTagsIndexPosition[     32538,        724]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Day 9: Explosives in Cyberspace", "Section",
 CellChangeTimes->{3.690261714470497*^9}],

Cell[CellGroupData[{

Cell["Input", "Subsection",
 CellChangeTimes->{{3.6902617164909616`*^9, 3.6902617170712147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "input", "=", 
   "\"\<(4x14)JVWV(84x11)(24x2)YAFPPYWOQJKUKQTJACJAOWYF(25x11)(1x1)J(12x14)\
CNZKOSNAJVYL(16x3)QADCLDFUVLLZZYKX(44x15)(6x6)SUAXJM(16x4)(1x15)S(4x3)TJLZ(\
5x13)XVUCL(83x7)(23x9)WIIPUJELAEJXNAEOLOKNVWG(1x5)E(32x1)(17x6)\
SUTMAPNOOLYENSSXR(4x6)XLCF(4x14)MTLX(5x1)BSVMF(71x8)(14x6)(1x8)G(2x13)US(\
38x15)(8x8)ARZSGIGT(19x5)CJZJZPFJAVAMGHXJTQD(1x9)R(283x8)(35x10)(8x14)\
XGYQJNOH(14x10)TAHCPETVDTFJUM(103x2)(1x13)H(23x15)DPMHJRJZEFEMPVRWEVJSJKX(8x1)\
LZHWFQUN(28x4)BKEVJUTVRNFNLBKSGUDWIUQMUHOH(13x3)UVIUHILLVYMGG(19x4)\
BEJMSSZUFBNOKATZGTO(79x5)(16x14)THNKRIKYRCDLGHBC(7x13)DKOCVNU(1x15)F(5x6)\
YGOBW(19x14)ULJKHNBIUHRJREZDDUJ(15x8)ZLSFAJXPJMBJAFB(129x1)(3x15)CSP(6x14)\
CENZEW(66x4)(4x9)OWJW(15x6)MBDRUKFILMGUIFN(24x8)QZOGFWHDWEKWKAHJCEVCHJEE(1x7)\
E(2x2)NP(23x2)TKWKUEBAXYXCJGNGVGDNZZP(6863x7)(765x2)(758x9)(489x13)(290x1)(\
45x1)(7x9)TFWYQXA(5x4)WFXPM(16x13)CAOREKUYBKRJUWMD(28x6)(5x2)TYNVR(5x11)HFMVV(\
1x11)E(29x2)(6x3)PFFYYG(11x13)VLLEXZNRJPD(99x5)(13x14)UKZMNKGWITWAK(5x7)JHHTK(\
5x5)FMAIL(22x4)WFKBNNDQSINTFOKWABDSKA(25x3)HRZTKQLJYZOQUVJSSJUVSLFZU(59x1)(\
12x8)EZPFSSKSKZTC(14x4)AASWPMUULDMISS(9x2)KDYYSAIJY(2x2)KL(11x1)(6x8)(1x6)B(\
156x3)(20x9)MYEZLSGKMXBRULVFLNWM(94x7)(5x3)VBRTE(19x12)VVJIRLYDDXRKTZUJRJO(\
19x4)MFQEJOENEJASWKCRKIS(16x10)DPCALBQVPPNEJZVX(4x14)KPXN(2x4)AC(16x13)(10x2)\
ZSDCNCRPWG(7x9)CKRAALS(3x12)WOX(190x12)(21x1)(15x2)CWEALKHVUJRKUZM(8x1)\
HMRGTTHX(1x4)M(11x5)FDKJPLSSJXZ(119x15)(112x5)(5x9)NEDAR(18x14)\
CJZFFRFLLHEKBJROIX(50x14)SMIZJRIFFCKQRHPBTFEHHGMYEYZKMHMLCXGYMOBQWDWBKUKMWG(\
14x9)UKBZYCSGQOODPD(47x12)(40x14)DKXLLEKAEJVWGQXTCTLETCIUZSYEEWKCKRPLRJCE(\
2107x14)(1382x12)(30x14)FPWYVMBIVHPTGLYHNVOYPZJNTYGBLD(634x2)(205x13)(8x4)(\
2x15)SL(80x9)(31x1)JTSPSMAINXBNBRZSMHMHUHJGLRGIPIH(4x7)VTSS(27x15)\
JFZCAMFRUURZSHSTIVBSKIAPZIX(50x7)(2x2)QT(1x5)J(10x7)INLBBWLCQL(14x10)\
KWIOCPXLDWKSGM(43x15)(5x13)ILDAJ(2x15)IC(6x7)POOTGI(7x15)ELBGODE(3x3)VKN(\
145x11)(42x15)(4x15)DZCR(4x9)AUQA(3x8)HJC(2x4)KO(3x4)GNF(7x6)(1x11)V(17x14)\
MTGGJYEKVTYWMHHUZ(45x9)(1x11)F(5x3)APNHX(21x13)EVNIMEHDVXSNUMKDBPOGP(4x7)DSOZ(\
23x6)FLGNEPLSWXZINJWHCFCDAFG(223x15)(27x3)(7x7)PAUXORX(4x2)TLPT(1x2)W(40x4)\
RBVJKPRYUGQSDLQWGFXOOECMZHPXLCPZSEUDGZYU(16x5)QUZGZJYILGSXEUVC(108x5)(2x13)YN(\
20x3)TYROWFOSZUYJBXBEJRNC(41x3)SIVTZCQLSYVYMXQCVGOFLLTQOEHDRMVBPHQTZGBVB(2x6)\
WA(14x8)DUUYEPEYZCBBTQ(2x1)EJ(1x8)S(217x7)(38x12)(1x10)S(9x1)(3x15)MYE(11x9)\
DEJNGHTACYT(2x9)BI(8x3)XBWRQDFS(125x1)(44x12)\
TGIQMKGHFKZHKBGNSBOLUEWGVFESIODDGFXALDVVAEAB(6x5)(1x1)H(57x5)(16x10)\
HZFCMNMENWJQEGPN(14x10)BRUJTSJNSNUPWZ(7x15)GHVCAGA(14x4)AXZJRFABNDFCTX(467x4)(\
29x6)(12x6)UMTKEGMHMLKR(6x9)VTIOBO(84x6)(1x3)L(38x10)(4x10)QQWK(3x10)EZD(13x5)\
RODNWCXNHDDIN(1x2)D(5x9)QOMXK(11x3)(5x10)XFDOS(183x2)(45x9)(19x13)\
ZLDTRTVALUZDZFMBLRF(13x1)WLZJWFWHQDTXW(6x15)WXWECV(34x9)(22x8)\
TUZJKDDHIEPMGAOBLFPIKV(1x1)L(32x14)(7x15)RWLJBXP(12x10)ETCCOCHZBAJR(35x9)(2x8)\
LN(22x7)BVZUFUJXSEZCASMTJPXJCL(145x6)(8x13)YDNMOBOP(31x7)\
HLDVSBEFYZNKGTZGYYAOBHNDSEOCOLV(44x1)(17x10)NTEASXSWQIGFJKGBW(6x2)PAIMIB(4x6)\
ISAI(38x6)PYHNNTLMSKFYIKJPJLEPRZWROAVZEEBZDTZXOA(555x15)(30x15)(14x14)(9x1)\
PZDIOWWVR(3x15)UPI(8x3)FLACUNUS(234x6)(93x6)(5x11)MSFAR(43x10)\
LZLKBLPCOVZLUEUNSETMBXZAUXPZOCRAFGIZYWYWFJJ(25x10)SOYROQRUMQRCQDGSCDQMDDXUE(\
28x5)(7x8)BFZQPAD(10x2)OOMRNMVYMP(95x9)(82x8)(56x9)\
ADFRMHBZMIRIRXFXFEOUDSSWBXWFSNGFYLYQBKTYIAGDODMYUZBNCXBW(14x7)DECKFWHMDQZEVW(\
2x7)US(245x8)(237x12)(37x11)(4x5)HSUQ(6x2)CSJSZF(1x15)P(4x12)DHDC(6x2)WDBEKI(\
86x13)(13x11)LMCFYGVEQYOXG(6x11)FXWKPE(28x14)CXMLNWBEIBXFVYBQFYYXMLEYXTHV(2x1)\
JM(6x11)JWRQGX(75x2)(19x12)HLEFCHHUNNVPKRHBSNI(3x4)XXO(1x6)G(9x3)DZZZLJAVA(\
14x12)SVOGFHGOMILNDY(2x11)AE(7x8)CPRSIEM(146x7)(63x4)(40x10)(8x12)HREXHQQV(\
19x15)NHFTETPZOGQPMTTJWGB(10x7)FFHJQIKKUU(5x2)EZYSH(45x9)\
AFCEPUTOJXPKWXVHESXCDAVONUSGBXYDGOTJKMWLUDSGZ(10x1)GFFOMDSVJK(2255x8)(1313x13)\
(195x1)(12x14)JRMGJMPSIAYP(3x12)ZVU(94x8)(88x8)(7x12)QYRZOXQ(3x14)MST(4x6)\
PWFV(30x14)RGBUFBIYCLOYCEBCLRIRIZMKETCHGD(13x13)PRWWNBYPOSCEG(60x14)(16x15)(\
10x4)UCXJKCLUSZ(31x3)(11x7)OLFIDYNWARC(9x2)BTJJVYABK(225x7)(22x7)(9x14)\
MKXZMAXWG(1x14)T(143x9)(92x8)(4x4)EANM(21x12)CJWPGDXEAFVKCURLZVSQY(9x6)\
MYOKSEXFF(20x8)NWMYBGSNAJETPYOZAHMI(9x11)LLIHLSEGK(29x13)(3x3)ZOU(15x8)\
ICTPRUAEUAWJZQO(3x14)EJT(40x11)GZXXFRLDZWBUDVWUSOGTJQBZPIUKEOFGEPEJXZLZ(477x9)\
(102x1)(68x10)(8x8)OEYUDLGQ(29x15)WJZNVYTMKGLBBCKRNCFEXZTXHRFXF(12x11)\
EONHXGVTERDU(1x9)X(15x2)EUHJXCNQDRKGQEE(78x14)(1x5)W(5x5)FOPSO(56x4)(12x13)\
LJIFRANVTMFW(2x2)VL(7x5)NAFLCBH(2x9)QX(6x2)JUKNXC(72x12)(8x15)TWYEERLN(16x1)(\
3x8)PUO(2x13)PQ(9x7)YZMEDORQL(16x4)ANAFFSKWYANYZFYC(197x2)(63x10)(30x14)\
FKMXZDDPOPETLQAOOHOICGGIRSCNVZ(3x7)NAG(11x12)IUDUKASSBPH(41x14)(2x11)KI(9x8)\
GWDWTFLRM(13x3)UJAXLOTXDJBAY(1x13)E(10x3)VBYFHVSFGE(50x8)(18x6)\
PHXVXMBBASFGMIAEPS(7x8)RMTGOVA(9x7)YCVBGFGQE(249x9)(6x6)PTMNTP(2x1)UN(223x15)(\
3x5)LIN(7x9)QSGULSS(95x12)(9x3)NEOVNFGHW(11x12)SYNKHCNJNRK(5x14)BZFDK(39x6)\
DWYDUKQFGNRMHHKADEUPMVEAEITNPMGHQVZEUIX(1x14)W(22x3)(1x6)K(1x7)B(5x4)UJYOI(\
67x4)(22x8)AXLCJBGMPEYBFCPCGAJYOP(33x9)WQRLFGPDCIDEFSFJBCECXNHEAHQQZTHKQ(\
132x9)(65x8)(3x10)YCV(50x8)(3x14)SGM(7x4)DKYSOFD(3x13)NAV(14x9)ISWITRFROOLPAL(\
26x3)(5x10)MRQPE(2x6)KE(2x11)YM(10x13)ZKLAZMLQLK(6x14)YPAVRE(624x3)(181x7)(\
68x13)(21x12)JLXDYPYFCYDMVHQABFMVI(12x10)MDTVSRSDYMUJ(15x4)KQNHDNKHUBTQQPZ(\
99x13)(1x14)C(9x15)QDNBANFGV(62x5)(4x2)IWFQ(7x12)TFPQQCU(24x5)\
DBPOBCZBDKYIDTDJODMARSKY(4x14)ZITK(3x14)JKJ(428x14)(284x5)(87x6)(9x9)\
MUXVSFTMC(7x6)AYXHETP(41x5)DPXBPEIMGTEHUSVZDNISBBLJJGFMQHKVCVYCHKDMC(8x15)\
NGNYFZOG(96x8)(10x4)BVPKQJEHXR(18x2)MTNUGYYBEEVQSEOVCZ(19x14)\
DVFFQTKZAPTVHYWUVSR(24x7)HRWIMOXVXCNIFUMDJIAOIHOD(83x7)(3x4)JEH(2x14)KO(24x5)\
PHBOGUWHYPWSUMUKJVWGPXOI(16x5)SRJFHRSPBJBDCBUL(9x11)ZYRPVDCHL(12x4)\
OEEUHJYADRUQ(112x4)(54x10)(7x13)ZRHMOKJ(5x3)GYRZA(1x8)R(8x12)QIISRVON(6x1)\
JYUVAR(5x3)PHVJT(25x2)(19x7)OCSEVRZEXCGBUYDHJPY(5x7)NFXVW(14x8)GSRPSZVARWQODO(\
274x13)(14x5)TEDYKPFMSZJDPN(210x14)(202x15)(118x6)(37x10)\
XSRYNNCBPFZEXLJGHEUFGSSKEAGCGHDELXJMZ(3x6)NBD(9x12)WNQSRQMMX(19x14)\
UQNXQFVPARHPHGANPDL(18x12)QPAVMGIMKGLBVUCUNA(7x2)SVZZKTM(59x3)(33x1)\
UZSOZNJLLGXZQFAUSLCWLJAZOXYGBOXZB(5x8)OYHIV(4x11)HTHP(11x11)(6x2)PVJINV(1x6)K(\
7x5)IIFGBET(1703x13)(5x14)LCRHS(853x8)(297x1)(4x8)IATO(138x4)(47x9)(25x8)\
TKGYAPTVNCAOZGXEHVJSVUZQH(5x4)LTNWY(1x6)T(8x1)LZJDJKHT(66x6)(3x11)CZL(10x14)\
UFHKIPHXJU(1x4)D(7x14)QRSITNN(14x12)JWWGFGRNGKWEMS(57x2)(51x1)(11x14)\
DCFZCDZTAGR(11x6)JBUBCJTBMIY(4x12)TBJH(1x4)L(73x13)(66x10)(13x2)DEWJJECFXFDZT(\
8x11)RKIQWCLS(2x14)MI(2x13)IH(11x3)EIOPIGLPPRU(542x8)(11x9)ZYHQGXLYETL(74x12)(\
3x7)RIH(3x12)ABZ(51x3)(7x2)FFKYEUF(5x11)GYBQR(5x8)LQDFP(12x8)XZHDEEBHCQNP(\
162x9)(1x5)P(9x10)(4x3)FNDN(3x12)XHK(27x2)WELDLTBMAEQHHYPTCDJNUSTCKMM(93x9)(\
6x5)JKWAUT(23x13)ADNVFAMHSDECFUWNHQKYUPD(6x9)OKOOYV(17x11)OANWBVHFTYRMNYIVF(\
10x12)LXBOALHOLG(52x14)(14x3)KRKNAFDGGAJQVM(15x2)PUZAZWURHFNXCUP(5x14)JKHMQ(\
209x5)(23x13)QJXALGDLXOLSZMOAOIQIIKM(27x12)UKXUMPJVOIFGFCTMBBULLQQSVNP(13x9)(\
1x12)W(1x1)Q(68x10)(7x3)TAPFDEL(7x10)MGQVUVE(36x13)\
MECIHMUCYZGPZSGYFRIZSYNKNUJWRWLLIBCJ(44x15)(2x8)EB(3x5)WIZ(5x2)AWPMR(2x1)BR(\
7x1)RBGGFSM(824x13)(64x14)\
NHDVJKXOXWACGUYAPRHAAVEOBOHTKCCVADECJGVEOQDECRIOTDRPFGPSNBQKBWGC(5x7)DBWJW(\
330x10)(106x15)(4x8)FLQV(90x11)(6x1)CZOTMP(14x9)JKMYLMDZHGLBLS(30x8)\
XZKWOJVRLLUMPYMOOPXVIZBQMOEQKC(17x3)ZLBFMBAZQDLXHBTSN(171x13)(26x15)\
DWZFDBQNKLOZOFUDUDNBPJMOJP(27x12)BSYILJVQVEHZYHSBTWGCSXTTYQV(62x13)(41x15)\
WSIMKZVYWIDEJAQNHLSCUOJRCJNTNFEKLYFTHRBNV(9x7)CVRCEKAPY(28x12)\
LJGPZASECPTHDMZVTAUQJDMDWJMG(23x2)(16x10)WLDMJKFFUUQJBKKB(2x13)YL(398x3)(\
10x15)GBMFQKODZR(166x5)(19x8)RVMKTBJCFJRYOYKLABB(45x9)(4x2)AHRP(10x7)\
SUNWUPGBUI(4x8)AAYR(5x12)LQAOJ(64x6)(32x15)UUKUHLQLRCDNPFBTZCCELMHAEMJALWCW(\
7x2)OOXKPZV(7x10)TRZQKQQ(14x9)SPOBNBNHQUAXTA(140x7)(9x6)CEURHCCYN(49x10)(2x14)\
BA(21x2)LXDAOLWMGABWXNJJZNWMT(8x12)DXEJNXWG(64x4)(10x13)OSWHJMSEIX(29x5)\
QSWOYZGNLFJMNUNQWTXJLULOLXILV(7x5)XBJMJKC(55x1)(1x3)R(42x15)(11x1)RGPKOPUXYKN(\
11x8)ZEXFAXAEWIK(2x10)KA(1792x5)(779x10)(771x14)(1x9)R(160x12)(1x9)W(60x2)(\
17x2)(2x5)ZH(5x9)VKZHB(16x9)CLUZMXRXHXGYXKEG(9x13)IKRAARMTI(60x11)(5x12)GULNP(\
43x9)(1x12)D(1x3)B(16x9)GVMHIYPAPUBHVVHH(3x6)ETP(6x2)EAPQIC(4x13)XPHB(405x8)(\
2x8)FX(69x8)(4x3)NLCD(1x10)A(3x5)NZH(29x6)(23x5)YUTCGMAZDDYQVCJWKIHNZES(5x4)\
PXXFA(125x4)(45x3)(1x15)Z(7x8)XMATLKA(4x12)XOVI(1x1)C(4x12)ZUVR(24x6)(18x3)\
LTRJJBCDXWQJWVRYPC(38x8)(5x7)NEYNO(2x7)UU(15x9)PYETRDIPYYOGDHZ(12x5)\
RYWDFNFOYUSY(165x10)(27x11)(10x3)YMTTKQWJZI(6x2)VYEQTY(47x12)(14x7)\
OEZAMELIVXRFQR(12x8)RAWCWKDFYVLO(3x12)UJO(7x6)KEDMOJA(59x8)(4x9)WNGJ(11x15)\
TVLZNZPPIMC(10x5)BEIIWIAJVW(10x3)HPTIEYPOAC(177x14)(126x6)(3x5)WAF(20x8)(1x14)\
K(8x8)OJPNYBSI(20x5)(4x14)QFSL(4x10)TRCI(60x4)(7x12)CWDXKIT(11x9)IBHDSDZQYXI(\
3x14)XFL(14x14)TNPQWJYONMMATN(14x13)FDILKFEJOZJEAN(17x1)(1x6)E(6x4)EKLCDK(\
998x6)(3x13)BDO(520x8)(30x13)(11x11)URXDXGOIRAS(7x9)TCROBMZ(146x14)(73x1)(\
66x14)(16x2)UTMVELHWQDZHQSXZ(6x13)JNPFZP(1x7)P(9x11)IJGNOJEHT(6x4)VWGWEO(61x4)\
(40x9)(14x15)XCVLKPNPVMRNYU(1x5)Y(8x4)ZQMGREOI(9x11)(3x12)XNT(218x15)(5x5)\
COKBM(11x15)KKNTKSVNPBJ(78x9)(1x8)G(6x7)EWATMT(33x8)\
IXTNISPBIFCOWLQRSVVLDZDUOFZAOLWYS(15x11)(3x4)HEF(2x6)YG(4x15)SZPH(90x6)(11x3)\
NQCKGQKMBCJ(52x14)(14x15)AGXIFSMHYCNUDC(1x13)A(6x8)BLRXLS(7x14)WNJVUQI(9x1)(\
4x4)GBJY(96x10)(89x11)(7x1)(1x13)X(5x6)PPQPV(47x2)(6x3)WKNDXH(29x10)\
ONKOCGTEIKDCQLDVPMSRSXSOBSUYC(9x2)GKZJOKEZL(454x11)(14x15)COLYFNFJKXYQTN(\
416x15)(149x4)(23x13)(3x1)FZD(1x11)C(2x13)MD(44x13)(4x14)KRFS(8x1)GUACUOZE(\
15x7)WWFSKIRRQUXHRBE(61x12)(3x12)MIR(4x15)JATS(6x12)XFFBBR(12x13)XAKILNXBXRDL(\
5x10)IERHX(212x11)(72x12)(5x4)JNDDK(2x8)IM(12x14)CYRZXNSMMTHR(29x10)\
EELQQZAEXGXVYOFZDLSUGFWPRSZKN(9x10)XNAZAAQTR(37x1)(2x4)TR(7x1)ZHWZKQC(4x14)\
BNGX(2x11)UG(68x10)(10x6)XCVUIOZEEP(2x14)YB(12x4)KTBZYWGSTORC(2x11)CJ(11x10)\
JHNDCOSTTLX(17x15)PJZDEXJVJRDSMHXXN(10x3)KIUZZVAZHI(3x14)BCN(920x5)(831x8)(\
803x12)(328x5)(198x12)(98x5)(1x4)B(18x9)OHYGZYYYUCLBXBUIYM(19x5)\
BYDFBZEYKWXNNZFSLNI(16x14)NLOXNNSJLKCYCUZN(13x11)TQTBDLLIRHUWA(88x7)(25x7)\
TQRRUEPZPSUOUCITJMZROAIAW(2x9)GH(6x14)OVWZUW(7x14)NQECFMF(19x2)\
PYAROBFSCUQDVOBLFBO(106x8)(32x7)(4x1)ZCKY(17x3)CYYKYEKTAAGICLNIY(61x13)(11x6)\
UHCPBITWXTA(16x14)LGSTTUVQZISBHTPL(3x6)RMT(7x11)JORYMBJ(4x6)WVSO(443x10)(\
213x13)(44x3)(3x14)YDU(1x9)F(10x1)BWNYMWFUKM(8x7)UPGXQEGW(69x14)(9x14)\
FALJFRNYI(9x9)RBOIRPAMU(6x14)TERJIJ(2x8)TD(15x3)KJINFDWSHCQIEUL(80x14)(13x12)\
YDQKTRXZPSOOB(3x15)OXE(22x15)ATFZSYWRSMRMWFSSBZTWYK(16x8)UBZETPSJACZFSECV(\
17x2)OJNQOYVYXIOGFTHEW(30x15)WNOSVAFBXUNHLQNMVAXMKLFBMVEKMD(23x6)(17x9)(11x3)\
XIHYQHJWHVD(125x14)(7x4)ICFHBLA(72x4)(9x15)KJVZFZXXL(18x12)BRLFGPARHILSEGLVFB(\
3x12)GFX(6x5)TISUXV(7x7)WMQUWIT(28x13)(22x7)YISLXULNQPVSBKABASDWSV(10x14)\
VETBLITIAF(13x10)QHUXBIHXPZTMC(75x11)(68x10)(61x13)(54x10)(1x2)O(31x7)\
MEBIZTAYPUAPGQAYWMUTGOIHMRWVBIE(6x6)ZTHNRO(49x11)(43x5)(3x6)OSC(8x8)LJQDDOGZ(\
15x10)XWHFNHTLUSZUJMQ(140x13)(98x3)(35x9)YQBPVSDYFKTUEVECOYYVSYKBPPIMHGEGJHH(\
19x3)LYLRVPIJVTJIKIAQSHG(2x5)MD(4x4)GVME(10x6)CDSWCITZPL(4x8)PQFV(2x2)QJ(14x8)\
LDAXJWGUMKLVRU(110x13)(3x3)UQX(6x10)TGVLKX(11x5)UCBHONGLAUP(66x15)(12x2)\
YIMWRKDRBRJN(13x12)IZQOYGTUNZTGV(22x3)ZQDTFHLZBTTHCWPKHDDTPY(56x6)(3x3)HEU(\
10x9)UKOZORNJWY(25x10)YIJVCIZSIGVAZFRSCAPFFKQQM(97x11)(91x3)(8x7)FHJNTEYH(\
15x13)FOARJPQAZBXCHUD(3x5)CWW(18x15)YNCIIAHKAFMQZCMTRF(16x12)SPSNBWDRIFLOGUZW(\
148x15)(89x14)(14x5)ETRROSLESWBLWP(7x13)LRPWUCK(5x12)ANFDM(31x3)\
SPFASFSHXEBCITEEKEPRHJVTSEMHBVL(2x10)QA(46x7)(3x4)JJE(32x7)\
YVAPHWJEYIOEXKEBJMJQHIHIVLEWSSDP(24x13)(8x14)BZUKOVBV(5x2)XXUYW(2x10)CS\>\""}]\
, ";"}]], "Input",
 CellChangeTimes->{{3.690261733602538*^9, 3.6902617419126415`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Part 1", "Subsection",
 CellChangeTimes->{{3.6902617193265057`*^9, 3.6902617201478453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", "\"\<ABCX(8x2)(3x3)ABCY(2x5)FGH\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6902619111414967`*^9, 3.690261913970584*^9}, 
   3.6902619726200705`*^9, {3.6902630957733617`*^9, 3.690263112602784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeCompress", "[", "string_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tags", ",", "i", ",", "len", ",", "open", ",", "tag", ",", "char", ",", 
      "decomp", ",", "taglen", ",", "tagtimes", ",", "result"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"StringLength", "@", "string"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"open", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"decomp", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tag", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"taglen", "=", "0"}], ";", 
     RowBox[{"tagtimes", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "len"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "decomp"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Scan", " ", "for", " ", "compression", " ", "tags"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", "i", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<(\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "open"}], ",", 
               RowBox[{"open", "=", "True"}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive (\>\"", "]"}]}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"open", ",", 
             RowBox[{"tag", "=", 
              RowBox[{"tag", "<>", "char"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "open"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"result", ",", 
               RowBox[{"{", 
                RowBox[{"char", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<)\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"open", ",", 
               RowBox[{
                RowBox[{"open", "=", "False"}], ";", 
                RowBox[{"decomp", "=", "True"}]}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive )\>\"", "]"}]}], 
              "]"}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Do", " ", "the", " ", "decompression", " ", "with", " ", "the", 
            " ", "current", " ", "tag"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"taglen", ",", "tagtimes"}], "}"}], "=", 
            RowBox[{"ToExpression", "@", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"tag", ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<x\>\""}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"i", "+", "taglen", "-", "1"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"{", 
              RowBox[{"char", ",", "tagtimes"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"decomp", "=", "False"}], ";", 
           RowBox[{"tag", "=", "\"\<\>\""}], ";", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "taglen", "-", "1"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringRepeat", "@@@", "result"}], "//", "StringJoin"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.690261921255701*^9, 3.6902619554370575`*^9}, {
  3.6902624939158974`*^9, 3.6902625694126587`*^9}, {3.690262678836389*^9, 
  3.690263000989811*^9}, {3.6902630582638054`*^9, 3.6902630650820074`*^9}, {
  3.690263169616847*^9, 3.690263577689946*^9}, {3.690263609712206*^9, 
  3.690263628868285*^9}, {3.6902636591148043`*^9, 3.6902636592321653`*^9}, {
  3.690263702168776*^9, 3.690263721132861*^9}, {3.6902637538701115`*^9, 
  3.690263849117074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress", "[", "test", "]"}]], "Input",
 CellChangeTimes->{{3.6902629616178465`*^9, 3.6902629685395412`*^9}}],

Cell[BoxData["\<\"ABCX(3x3)ABC(3x3)ABCYFGFGFGFGFGH\"\>"], "Output",
 CellChangeTimes->{{3.6902629873458242`*^9, 3.690263002340217*^9}, 
   3.69026340090257*^9, {3.6902634336867113`*^9, 3.6902634954968214`*^9}, {
   3.690263533928302*^9, 3.690263580555284*^9}, {3.6902636177172585`*^9, 
   3.690263668836691*^9}, {3.6902637044211493`*^9, 3.690263722444193*^9}, 
   3.6902637587548547`*^9, {3.6902637937907944`*^9, 3.69026385112626*^9}, 
   3.690275158838154*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress", "[", "\"\<ADVENT\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.690263856715585*^9, 3.6902638637288933`*^9}}],

Cell[BoxData["\<\"ADVENT\"\>"], "Output",
 CellChangeTimes->{3.6902638640490656`*^9, 3.6902751598472624`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress", "[", "\"\<A(1x5)BC\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.690263869218913*^9, 3.690263888428901*^9}}],

Cell[BoxData["\<\"ABBBBBC\"\>"], "Output",
 CellChangeTimes->{3.690263890416709*^9, 3.6902751608052225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress", "[", "\"\<A(2x2)BCD(2x2)EFG\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6902638752856216`*^9, 3.6902638875590115`*^9}}],

Cell[BoxData["\<\"ABCBCDEFEFG\"\>"], "Output",
 CellChangeTimes->{3.6902638928882494`*^9, 3.6902751616767473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress", "[", "\"\<X(8x2)(3x3)ABCY\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.690263881229061*^9, 3.690263887081953*^9}}],

Cell[BoxData["\<\"X(3x3)ABC(3x3)ABCY\"\>"], "Output",
 CellChangeTimes->{3.6902639011406765`*^9, 3.6902751620621185`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeCompress", "[", "input", "]"}], "//", "StringLength"}]], "Input",
 CellChangeTimes->{{3.6902639249409113`*^9, 3.6902639329333305`*^9}}],

Cell[BoxData["74532"], "Output",
 CellChangeTimes->{{3.6902639289873266`*^9, 3.690263933290081*^9}, 
   3.690275163169012*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2", "Subsection",
 CellChangeTimes->{{3.6902617215398836`*^9, 3.690261722437823*^9}, 
   3.6902638798840685`*^9}],

Cell["Advanced decompress", "Text",
 CellChangeTimes->{{3.6902643556119847`*^9, 3.690264358283968*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeCompress2", "[", "string_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tags", ",", "i", ",", "len", ",", "open", ",", "tag", ",", "char", ",", 
      "decomp", ",", "taglen", ",", "tagtimes", ",", "result"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"StringLength", "@", "string"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"open", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"decomp", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tag", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"taglen", "=", "0"}], ";", 
     RowBox[{"tagtimes", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "len"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "decomp"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Scan", " ", "for", " ", "compression", " ", "tags"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", "i", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<(\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "open"}], ",", 
               RowBox[{"open", "=", "True"}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive (\>\"", "]"}]}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"open", ",", 
             RowBox[{"tag", "=", 
              RowBox[{"tag", "<>", "char"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "open"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"result", ",", 
               RowBox[{"{", 
                RowBox[{"char", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<)\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"open", ",", 
               RowBox[{
                RowBox[{"open", "=", "False"}], ";", 
                RowBox[{"decomp", "=", "True"}]}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive )\>\"", "]"}]}], 
              "]"}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Do", " ", "the", " ", "decompression", " ", "with", " ", "the", 
            " ", "current", " ", "tag"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"taglen", ",", "tagtimes"}], "}"}], "=", 
            RowBox[{"ToExpression", "@", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"tag", ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<x\>\""}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"i", "+", "taglen", "-", "1"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DeCompress2", "[", "char", "]"}], ",", "tagtimes"}], 
              "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"decomp", "=", "False"}], ";", 
           RowBox[{"tag", "=", "\"\<\>\""}], ";", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "taglen", "-", "1"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringRepeat", "@@@", "result"}], "//", "StringJoin"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6902751700675645`*^9, 3.6902751894534245`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress2", "[", "test", "]"}]], "Input",
 CellChangeTimes->{{3.69027520023905*^9, 3.6902752132615128`*^9}}],

Cell[BoxData["\<\"ABCXABCABCABCABCABCABCYFGFGFGFGFGH\"\>"], "Output",
 CellChangeTimes->{3.6902752135067124`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "DeCompress2", "[", 
   "\"\<(25x3)(3x3)ABC(2x3)XY(5x2)PQRSTX(18x9)(3x2)TWO(5x7)SEVEN\>\"", "]"}], 
  "//", "StringLength"}]], "Input",
 CellChangeTimes->{{3.690275240988373*^9, 3.690275253285824*^9}}],

Cell[BoxData["445"], "Output",
 CellChangeTimes->{{3.6902752453909903`*^9, 3.6902752539094095`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeCompress2", "[", "input", "]"}], "//", "StringLength"}]], "Input",
 CellChangeTimes->{{3.690275265211894*^9, 3.6902752657442017`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "General","nomem",
   "\"The current computation was aborted because there was insufficient \
memory available to complete the computation.\"",2,16,1,23229704370189685766,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6902754218450613`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Throw","sysexc",
   "\"Uncaught SystemException returned to top level. Can be caught with \
Catch[\[Ellipsis], _SystemException].\"",2,16,2,23229704370189685766,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.690275421899404*^9}],

Cell[BoxData[
 RowBox[{"SystemException", "[", "\<\"MemoryAllocationFailure\"\>", 
  "]"}]], "Output",
 CellChangeTimes->{3.690275422048523*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeCompress2Count", "[", "string_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tags", ",", "i", ",", "len", ",", "open", ",", "tag", ",", "char", ",", 
      "decomp", ",", "taglen", ",", "tagtimes", ",", "result"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"StringLength", "@", "string"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"open", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"decomp", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tag", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"taglen", "=", "0"}], ";", 
     RowBox[{"tagtimes", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "len"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "decomp"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Scan", " ", "for", " ", "compression", " ", "tags"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", "i", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<(\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "open"}], ",", 
               RowBox[{"open", "=", "True"}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive (\>\"", "]"}]}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"open", ",", 
             RowBox[{"tag", "=", 
              RowBox[{"tag", "<>", "char"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "open"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"result", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"char", "\[Equal]", "\"\<)\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{"open", ",", 
               RowBox[{
                RowBox[{"open", "=", "False"}], ";", 
                RowBox[{"decomp", "=", "True"}]}], ",", 
               RowBox[{
               "Print", "[", "\"\<Error: two successive )\>\"", "]"}]}], 
              "]"}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Do", " ", "the", " ", "decompression", " ", "with", " ", "the", 
            " ", "current", " ", "tag"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"taglen", ",", "tagtimes"}], "}"}], "=", 
            RowBox[{"ToExpression", "@", 
             RowBox[{"StringSplit", "[", 
              RowBox[{
               RowBox[{"StringTake", "[", 
                RowBox[{"tag", ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<x\>\""}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"char", "=", 
            RowBox[{"StringTake", "[", 
             RowBox[{"string", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"i", "+", "taglen", "-", "1"}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DeCompress2Count", "[", "char", "]"}], ",", 
               "tagtimes"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"decomp", "=", "False"}], ";", 
           RowBox[{"tag", "=", "\"\<\>\""}], ";", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "taglen", "-", "1"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Times", "@@@", "result"}], "//", "Total"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6902758119779043`*^9, 3.6902758974466224`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress2Count", "[", 
  "\"\<(25x3)(3x3)ABC(2x3)XY(5x2)PQRSTX(18x9)(3x2)TWO(5x7)SEVEN\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{3.6902758834155245`*^9}],

Cell[BoxData["445"], "Output",
 CellChangeTimes->{{3.690275884764492*^9, 3.6902758993371124`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeCompress2Count", "[", "input", "]"}]], "Input",
 CellChangeTimes->{{3.690275904624587*^9, 3.6902759052541227`*^9}}],

Cell[BoxData["11558231665"], "Output",
 CellChangeTimes->{3.6902759060080137`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeCompress2Count", "[", "input", "]"}], "/", 
   SuperscriptBox["1024", "3"]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.69027591435203*^9, 3.6902759491937284`*^9}}],

Cell[BoxData["10.764442072249949`"], "Output",
 CellChangeTimes->{{3.690275929701505*^9, 3.6902759496620483`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.4 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 92, 1, 96, "Section"],
Cell[CellGroupData[{
Cell[697, 27, 97, 1, 67, "Subsection"],
Cell[797, 30, 11494, 158, 1938, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[12328, 193, 98, 1, 54, "Subsection"],
Cell[12429, 196, 247, 4, 43, "Input"],
Cell[12679, 202, 5057, 115, 688, "Input"],
Cell[CellGroupData[{
Cell[17761, 321, 136, 2, 43, "Input"],
Cell[17900, 325, 461, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18398, 336, 144, 2, 43, "Input"],
Cell[18545, 340, 109, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18691, 346, 144, 2, 43, "Input"],
Cell[18838, 350, 108, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18983, 356, 157, 2, 43, "Input"],
Cell[19143, 360, 114, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19294, 366, 151, 2, 43, "Input"],
Cell[19448, 370, 121, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19606, 376, 172, 3, 43, "Input"],
Cell[19781, 381, 126, 2, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19956, 389, 124, 2, 67, "Subsection"],
Cell[20083, 393, 103, 1, 42, "Text"],
Cell[20189, 396, 4714, 110, 688, "Input"],
Cell[CellGroupData[{
Cell[24928, 510, 134, 2, 43, "Input"],
Cell[25065, 514, 113, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25215, 520, 238, 6, 43, "Input"],
Cell[25456, 528, 100, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25593, 534, 171, 3, 43, "Input"],
Cell[25767, 539, 300, 7, 31, "Message"],
Cell[26070, 548, 285, 6, 31, "Message"],
Cell[26358, 556, 144, 3, 43, "Output"]
}, Open  ]],
Cell[26517, 562, 4710, 110, 688, "Input"],
Cell[CellGroupData[{
Cell[31252, 676, 182, 4, 43, "Input"],
Cell[31437, 682, 98, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31572, 688, 141, 2, 43, "Input"],
Cell[31716, 692, 82, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31835, 698, 216, 5, 46, "Input"],
Cell[32054, 705, 114, 1, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

